#
# Executes commands at the start of an interactive session.
#
# Authors:
#   Sorin Ionescu <sorin.ionescu@gmail.com>
#

# Source Prezto.
if [[ -s "${ZDOTDIR:-$HOME}/.zprezto/init.zsh" ]]; then
  source "${ZDOTDIR:-$HOME}/.zprezto/init.zsh"
fi

# Customize to your needs...

autoload -Uz zmv

# Partially disable the zsh's autocorrect feature
# 下記コマンドについて、Zshのcorrect機能を表示させないようにする
cmmnds=(gulp rspec rubocop)
for cmmnd in "${cmmnds[@]}"; do
  alias $cmmnd="nocorrect $cmmnd"
done

# cd XXX
alias d='cd ~/Desktop'
alias s='cd ~/Sites'
alias dotfiles='cd ~/.dotfiles'
alias dotfile='dotfiles'
alias dot='dotfiles'
alias ops='cd ~/Documents/ops'

# open XXX
alias od='open ~/Desktop'
alias odot='open ~/Sites'
alias os='open ~/Sites'

# htpasswd
# make file `.htpasswd` in current dir with MD5 hash
alias htpasswd='htpasswd -cbm .htpasswd'

alias o='source ~/.dotfiles/functions/open_with_sublime_sourcetree.sh'
alias a='source ~/.dotfiles/functions/open_with_atom_sourcetree.sh'
alias mkcd='source ~/.dotfiles/functions/mkdir_cd.sh'

alias m='middleman'
alias m_new='middleman_new'

alias f='foreman'
alias g='git'
alias gitignore='gibo'
alias st='stree' # SourceTree
alias v='vagrant'

# rbenvを使った環境用
function re   { rbenv exec $@ }
function reb  { rbenv exec bundle $@ }
function rebe { rbenv exec bundle exec $@ }

alias rebi='reb install --path=vendor/bundle --binstubs=vendor/bin'
alias rebem='rebe middleman'
alias rebef='rebe foreman start --procfile=ProcfileDev'

# start HTTP server
alias pythonserver='python -m SimpleHTTPServer'
alias web='pythonserver'
alias http='pythonserver'
alias server='pythonserver'

# プロセス名から選んでシグナルを送る
alias psint='ps -ax | peco | xargs kill -2' # 割り込み（Ctrl+Cと同じ）
alias psquit='ps -ax | peco | xargs kill -3' # 終了
alias pskill='ps -ax | peco | xargs kill -9' # 強制終了
alias psterm='ps -ax | peco | xargs kill -15' # 終了

# SSHの公開鍵を素早くコピー、サーバーへログインしてauthorized_keysにペースト
alias copy-rsa='cat ~/.ssh/id_rsa.pub | pbcopy'

# middleman-templateをclone
alias middleman_template='git clone --recursive https://github.com/naokazuterada/middleman-template.git'

# export PATH="/Users/terada/.rbenv/shims:/Users/terada/.rbenv/shims:/Users/terada/Qt/5.1.0/clang_64/bin:/Applications/SenchaSDKTools-2.0.0-beta3:/Applications/SenchaSDKTools-2.0.0-Beta/jsbuilder:/Applications/SenchaSDKTools-2.0.0-Beta/bin:/Applications/SenchaSDKTools-2.0.0-Beta:/usr/local/git/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin:/opt/X11/bin:/usr/local/bin:/opt/local/bin:/opt/local/sbin:/opt/local/lib/postgresql91/bin:/Applications/SenchaSDKTools-2.0.0-Beta:/bin:/Applications/SenchaSDKTools-2.0.0-Beta/bin:/Applications/SenchaSDKTools-2.0.0-Beta/jsbuilder:/Applications/SenchaSDKTools-2.0.0-beta3:/Users/terada/bin:/Users/terada/ratproxy:/usr/local/Cellar/android-sdk/20130219/tools:/usr/local/Cellar/android-sdk/20130219/platform-tools:/Users/terada/bin/repo:/usr/local/share/npm/bin"

export PATH=$PATH:/Applications/SenchaSDKTools-2.0.0-Beta
export PATH=$PATH:/Applications/SenchaSDKTools-2.0.0-Beta/bin
export PATH=$PATH:/Applications/SenchaSDKTools-2.0.0-Beta/jsbuilder
export PATH=$PATH:/Applications/SenchaSDKTools-2.0.0-beta3
export PATH=$PATH:$HOME/bin
export PATH=$PATH:$HOME/bin/FDK/Tools/osx
export PATH=$PATH:$HOME/Qt/5.1.0/clang_64/bin
export PATH=$PATH:$HOME/Qt5.1.0/5.1.0/clang_64/bin
export PATH=$PATH:$HOME/.rbenv/bin
export PATH=$PATH:/usr/local/heroku/bin ### Added by the Heroku Toolbelt
export PATH=$PATH:$HOME/.dotfiles/functions
export PATH=$PATH:./vendor/bin:./bin # for bundler
export PATH=$PATH:./node_modules/.bin # for npm
export PATH=$PATH:$HOME/.nodebrew/current/bin # for nodebrew

# for Go-Lang
export GOROOT=/usr/local/opt/go/libexec
export GOPATH=$HOME
export PATH=$PATH:$GOROOT/bin:$GOPATH/bin

# for pyenv
export PYENV_ROOT=$HOME/.pyenv
export PATH=$PYENV_ROOT/bin:$PATH
eval "$(pyenv init -)"

export SENCHA_SDK_TOOLS_2_0_0_BETA3="/Applications/SenchaSDKTools-2.0.0-beta3"
# Initialization for FDK command line tools.Wed Dec  4 19:20:56 2013
export FDK_EXE=$HOME/bin/FDK/Tools/osx

# Comment out by terada because command not found occur on zsh
# Node Completion - Auto-generated, do not touch.
#shopt -s progcomp
#for f in $(command ls ~/.node-completion); do
# f="$HOME/.node-completion/$f"
# test -f "$f" && . "$f"
#done

# for rbenv
if which rbenv > /dev/null; then
  export RBENV_ROOT=$HOME/.rbenv
  export PATH=$PATH:$RBENV_ROOT/shims
  eval "$(rbenv init -)"
fi

# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# ssh
# export SSH_KEY_PATH="~/.ssh/dsa_id"
