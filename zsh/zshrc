#
# Executes commands at the start of an interactive session.
#
# Authors:
#   Naokazu Terada <naokazu.terada@gmail.com>
#

# Source Prezto.
if [[ -s "${ZDOTDIR:-$HOME}/.zprezto/init.zsh" ]]; then
  source "${ZDOTDIR:-$HOME}/.zprezto/init.zsh"
fi

# Customize to your needs...

autoload -Uz zmv

# Partially disable the zsh's autocorrect feature
# 下記コマンドについて、Zshのcorrect機能を表示させないようにする
cmmnds=(gulp rspec rubocop cf ncu dg eslint)
for cmmnd in "${cmmnds[@]}"; do
  alias $cmmnd="nocorrect $cmmnd"
done

# cd XXX
alias c='cd ~/Karappo\ Inc.\ Dropbox/Terada\ Naokazu/AppSync/Chrome'
alias d='cd ~/Desktop'
alias s='cd ~/Sites'
alias dotfiles='cd ~/.dotfiles'
alias dotfile='dotfiles'
alias dot='dotfiles'
alias ops='cd ~/Documents/ops'

# open XXX
alias od='open ~/Desktop'
alias odot='open ~/Sites'
alias os='open ~/Sites'

# htpasswd
# make file `.htpasswd` in current dir with MD5 hash
alias htpasswd='htpasswd -cbm .htpasswd'

# Local IP address
# WiFiとEthernetでIPが違うので、どちらでも大丈夫なようリストから選択式
alias ip='networksetup -listallhardwareports | peco | perl -pe "s/Device: (en[0-9]+)/\1/g;" | xargs ipconfig getifaddr'

alias o='source ~/.dotfiles/functions/open_with_sublime_sourcetree.sh'
alias a='source ~/.dotfiles/functions/open_with_atom_sourcetree.sh'
alias mkcd='source ~/.dotfiles/functions/mkdir_cd.sh'

alias m='middleman'
alias m_new='middleman_new'

# NPM
# Updating packages with 'node-check-updates'
alias ncu='npx npm-check -u'
# Pecoを使ってnpm scriptsをリスト化
alias npmrun='npm run $(commands | peco)'
function commands () {
  cat package.json | jq -r '.scripts | keys[]'
}

alias f='foreman'
alias g='git'
alias gitignore='gibo'
alias st='stree' # SourceTree
alias v='vagrant'

# rbenvを使った環境用
function re   { rbenv exec "$@"; }
function reb  { rbenv exec bundle "$@"; }
function rebe { rbenv exec bundle exec "$@"; }

alias rebi='reb install --path=vendor/bundle --binstubs=vendor/bin'
alias rebem='rebe middleman'
alias rebef='rebe foreman start --procfile=ProcfileDev'

# for pyenv
export PYENV_ROOT=$HOME/.pyenv
export PATH=$PYENV_ROOT/bin:$PATH
eval "$(pyenv init -)"
# pyenvを使った環境用
function pe { pyenv exec "$@"; }

# start HTTP server
alias http='python3 -m http.server'

# Determining my public IP
# Ref: https://www.cyberciti.biz/faq/how-to-find-my-public-ip-address-from-command-line-on-a-linux/
alias myip='dig +short myip.opendns.com @resolver1.opendns.com'

# Clear DNS cache
alias clearDNS='sudo killall -HUP mDNSResponder'

# Chrome log
# https://support.google.com/chrome/a/answer/6271282?hl=en
alias chrome_log='/Applications/Google\ Chrome.app/Contents/MacOS/Google\ Chrome --enable-logging=stderr --v=1'

# pecoを使ってプロセス名から選んでシグナルを送る
alias intps='ps -ax | peco | xargs kill -2' # 割り込み（Ctrl+Cと同じ）
alias quitps='ps -ax | peco | xargs kill -3' # 終了
alias killps='ps -ax | peco | xargs kill -9' # 強制終了
alias termps='ps -ax | peco | xargs kill -15' # 終了
# 使用しているportで探してkill
killpt() { lsof -i tcp:$1 | awk 'NR!=1 {print $2}' | xargs kill ; }
killport() { killpt $1; }

# SSHの公開鍵を素早くコピー、サーバーへログインしてauthorized_keysにペースト
alias copy-rsa='cat ~/.ssh/id_rsa.pub | pbcopy'

# middleman-templateをclone
alias middleman_template='git clone --recursive https://github.com/naokazuterada/middleman-template.git'

# iMac27-late2015 でExcelが重くなりやすいので、その際簡単にキャッシュを削除する
# 参考: https://getpocket.com/a/read/1262698222
alias excel_cleanup='rm -rf ~/Library/Preferences/com.microsoft.Excel.plist ~/Library/Preferences/com.microsoft.office.plist ~/Library/Caches/Microsoft ~/Library/Caches/Microsoft\ Office'

# PHP
alias composer="php ~/composer.phar"

# お遊び系
alias matrix='cmatrix'

# export PATH="/Users/terada/.rbenv/shims:/Users/terada/.rbenv/shims:/Users/terada/Qt/5.1.0/clang_64/bin:/Applications/SenchaSDKTools-2.0.0-beta3:/Applications/SenchaSDKTools-2.0.0-Beta/jsbuilder:/Applications/SenchaSDKTools-2.0.0-Beta/bin:/Applications/SenchaSDKTools-2.0.0-Beta:/usr/local/git/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin:/opt/X11/bin:/usr/local/bin:/opt/local/bin:/opt/local/sbin:/opt/local/lib/postgresql91/bin:/Applications/SenchaSDKTools-2.0.0-Beta:/bin:/Applications/SenchaSDKTools-2.0.0-Beta/bin:/Applications/SenchaSDKTools-2.0.0-Beta/jsbuilder:/Applications/SenchaSDKTools-2.0.0-beta3:/Users/terada/bin:/Users/terada/ratproxy:/usr/local/Cellar/android-sdk/20130219/tools:/usr/local/Cellar/android-sdk/20130219/platform-tools:/Users/terada/bin/repo:/usr/local/share/npm/bin"
export PATH=$PATH:/Applications/SenchaSDKTools-2.0.0-Beta
export PATH=$PATH:/Applications/SenchaSDKTools-2.0.0-Beta/bin
export PATH=$PATH:/Applications/SenchaSDKTools-2.0.0-Beta/jsbuilder
export PATH=$PATH:/Applications/SenchaSDKTools-2.0.0-beta3
export PATH=$PATH:$HOME/bin
export PATH=$PATH:$HOME/bin/FDK/Tools/osx
export PATH=$PATH:$HOME/Qt/5.1.0/clang_64/bin
export PATH=$PATH:$HOME/Qt5.1.0/5.1.0/clang_64/bin
export PATH=$PATH:$HOME/.rbenv/bin
export PATH=$PATH:/usr/local/heroku/bin ### Added by the Heroku Toolbelt
export PATH=$PATH:$HOME/.dotfiles/functions
export PATH=$PATH:./vendor/bin:./bin # for bundler
export PATH=$PATH:./node_modules/.bin # for npm
export PATH=$PATH:$HOME/pear/bin/
export PATH=/usr/local/share/npm/bin:$PATH
export PATH=/usr/local/opt/libxml2/bin:$PATH
export PATH=/usr/local/opt/openssl/bin:$PATH
export PATH=~/bin/LAStools-master/bin:$PATH
export LDFLAGS="-L/usr/local/opt/libxml2/lib"
export CPPFLAGS="-I/usr/local/opt/libxml2/include"
export PKG_CONFIG_PATH="/usr/local/opt/libxml2/lib/pkgconfig"

# for anyenv->
export PATH="$HOME/.anyenv/bin:$PATH"
eval "$(anyenv init -)"
# <-for anyenv

# for Go-Lang
export GOROOT=/usr/local/opt/go/libexec
export GOPATH=$HOME
export PATH=$PATH:$GOROOT/bin:$GOPATH/bin



export SENCHA_SDK_TOOLS_2_0_0_BETA3="/Applications/SenchaSDKTools-2.0.0-beta3"
# Initialization for FDK command line tools.Wed Dec  4 19:20:56 2013
export FDK_EXE=$HOME/bin/FDK/Tools/osx

# Comment out by terada because command not found occur on zsh
# Node Completion - Auto-generated, do not touch.
#shopt -s progcomp
#for f in $(command ls ~/.node-completion); do
#  f="$HOME/.node-completion/$f"
#  test -f "$f" && . "$f"
#done

# for rbenv and phpenv
# export RBENV_ROOT=/usr/local/var/rbenv <= 邪魔になるのでいらない。
export PHPENV_ROOT=$HOME/.phpenv
export PATH="$PATH:$PHPENV_ROOT/bin"
eval "$(rbenv init -)"
eval "$(phpenv init -)"

# WP-CLI Tab completions
# http://wp-cli.org/
autoload bashcompinit
bashcompinit
source /Users/terada/bin/wp-cli/wp-completion.bash
export PATH=$PATH:/Applications/MAMP/Library/bin/
#export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# ssh
# export SSH_KEY_PATH="~/.ssh/dsa_id"
test -e "${HOME}/.iterm2_shell_integration.zsh" && source "${HOME}/.iterm2_shell_integration.zsh"

# The next line updates PATH for the Google Cloud SDK.
if [ -f '/Users/terada/google-cloud-sdk/path.zsh.inc' ]; then . '/Users/terada/google-cloud-sdk/path.zsh.inc'; fi

# The next line enables shell command completion for gcloud.
if [ -f '/Users/terada/google-cloud-sdk/completion.zsh.inc' ]; then . '/Users/terada/google-cloud-sdk/completion.zsh.inc'; fi

# Install libxml2 for nokogiri gem
export PATH="/usr/local/opt/libxml2/bin:$PATH"
export LDFLAGS="-L/usr/local/opt/libxml2/lib"
export CPPFLAGS="-I/usr/local/opt/libxml2/include"
export PKG_CONFIG_PATH="/usr/local/opt/libxml2/lib/pkgconfig"

# heroku autocomplete setup
HEROKU_AC_ZSH_SETUP_PATH=/Users/terada/Library/Caches/heroku/autocomplete/zsh_setup && test -f $HEROKU_AC_ZSH_SETUP_PATH && source $HEROKU_AC_ZSH_SETUP_PATH;
export PATH="$HOME/.yarn/bin:$HOME/.config/yarn/global/node_modules/.bin:$PATH"

# for AWS CLI
export PATH=~/.local/bin:$PATH

# added by travis gem
[ -f /Users/terada/.travis/travis.sh ] && source /Users/terada/.travis/travis.sh
